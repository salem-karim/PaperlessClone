services:
  webui:
    build: ./webui
    ports:
      - "8000:80"
    depends_on:
      - rest-api
    networks:
      - paperless-net

  rest-api:
    build: ./rest-api
    ports:
      - "8080:8080"
    environment:
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
      RABBITMQ_HOST: rabbitmq
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: paperless
      MINIO_SECRET_KEY: paperless123
    depends_on:
      - postgres
      - rabbitmq
      - minio
      - elasticsearch
    networks:
      - paperless-net

  ocr-worker:
    build: ./ocr-worker
    depends_on:
      - rabbitmq
      - minio
    networks:
      - paperless-net

  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: secret
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - paperless-net

  adminer:
    image: adminer
    ports:
      - "9091:8080"
    depends_on:
      - postgres
    networks:
      - paperless-net

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "9093:15672"
    networks:
      - paperless-net

  minio:
    image: minio/minio
    command: server /data --console-address ":9090"
    environment:
      MINIO_ROOT_USER: paperless
      MINIO_ROOT_PASSWORD: paperless123
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9090:9090"
    networks:
      - paperless-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9092:5601"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - paperless-net

volumes:
  pgdata:
  minio-data:
  esdata:

networks:
  paperless-net:
